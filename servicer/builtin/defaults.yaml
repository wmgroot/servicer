ci:
  gitlab:
    # set 'only' for each job to the service's allowed service_environments
    infer_only: true
    # set the gitlab stage name to the step name of the first service-step in the stage instead of stage{N}
    infer_stage_name: true

docker:
  enabled: true

environment:
  # adjust these settings to control which branches map to service environments
  mappings:
    - branch: master
      environment: production
    - branch: develop
    - branch: env-*
  formatter:
    # convert all characters to lowercase
    lowercase: false
    # replace all 'from' strings with the 'to' string
    replace:
      - from:
        - '/'
        - '\\'
        - '_'
        to: '-'
    # limits service environment to N characters
    truncate: null
    # convert all characters to uppercase
    uppercase: false

git:
  # enable servicer git integration
  enabled: false

  # General Git Settings

  # if BRANCH env var is not set, use git to determine the current branch
  auto-set-branch: true
  # if COMMIT env var is not set, use git to determine the current commit
  auto-set-commit: true
  # automatically push a git tag for each successful build (used by change detection)
  auto-tag: true

  # short form commit minimum length
  commit-min-length: 10

  # git config default values
  config:
    user.email: servicer@aol.com
    user.name: servicer

  # use the --no-verify option when git pushing, useful when dealing with git-lfs
  no-verify: false

  # Change Detection Settings

  # if you use a single fixed integration branch, you can hard code it here
  default-branch: null
  # allow servicer to detect changes between tags from other branches
  diff-defaults-to-latest-tag: true
  # use automated servicer git tagging to power change detection, useful for monorepos
  diff-tagging-enabled: true
  # fetch tags and branches at the start of the build, some CI providers do this for you
  fetch-all: false
  # fetch existing tags at the start of the build, some CI providers do this for you
  fetch-tags: true
  # enable to skip running steps for services with no changes
  ignore-unchanged: true
  # enable to have servicer disregard commits made by servicer for change detection
  ignore-servicer-commits: false

graph:
  # if enabled, a service-step will automatically depend on the previous step for the same service
  implicit-step-dependencies: true

providers: {}

steps:
  - name: build
  - name: test
  - name: deploy
    config:
      requires_service_environment: true
  - name: destroy
    config:
      requires_service_environment: true
