# This services.yaml file is used to package servicer itself, and
# is a simple demonstration of servicer's use.

ci:
  providers:
    - circleci
  image: circleci/python:3.7

environment:
  variables:
    PROJECT_NAME: servicer

git:
  enabled: true
  ignore_paths:
    - '*README.md'
    - '*LICENSE'
    - '*.gitignore'

providers:
  dockerhub:
    config: {}
  package:
    libraries:
      - twine==1.11.0

services:
  pypi:
    provider: package
    service_type: pypi

    steps:
      build:
        commands:
          - rm -rf build dist
          - python setup.py sdist
        config:
          package_info:
            package_file_path: setup.py
          steps:
            - type: read_package_info
      test:
        commands:
          - python -m unittest discover -b
      deploy:
        config:
          steps:
            - type: generate_pypi_config
            - type: upload

  image-debian:
    includes:
      path: docker_image.yaml
      params:
        registry: wmgroot/${PROJECT_NAME}-debian
        dockerfile: docker/Dockerfile-debian
        docker_context_path: .
        image: wmgroot/${PROJECT_NAME}-debian

  image-alpine:
    includes:
      path: docker_image.yaml
      params:
        registry: wmgroot/${PROJECT_NAME}-alpine
        dockerfile: docker/Dockerfile-alpine
        docker_context_path: .
        image: wmgroot/${PROJECT_NAME}-alpine

  image-alpine-gcloud-terraform:
    steps:
      build:
        depends_on:
          - image-alpine:build

    includes:
      path: docker_image.yaml
      params:
        registry: wmgroot/${PROJECT_NAME}-alpine-gcloud-terraform
        dockerfile: docker/Dockerfile-alpine-gcloud-terraform
        docker_context_path: .
        image: wmgroot/${PROJECT_NAME}-alpine-gcloud-terraform

  image-alpine-gcloud-java-node-terraform:
    steps:
      build:
        depends_on:
          - image-alpine-gcloud-terraform:build

    includes:
      path: docker_image.yaml
      params:
        registry: wmgroot/${PROJECT_NAME}-alpine-gcloud-java-node-terraform
        dockerfile: docker/Dockerfile-alpine-gcloud-java-node-terraform
        docker_context_path: .
        image: wmgroot/${PROJECT_NAME}-alpine-gcloud-java-node-terraform

  image-alpine-gcloud-node-sbt-terraform:
    steps:
      build:
        depends_on:
          - image-alpine-gcloud-java-node-terraform:build

    includes:
      path: docker_image.yaml
      params:
        registry: wmgroot/${PROJECT_NAME}-alpine-gcloud-node-sbt-terraform
        dockerfile: docker/Dockerfile-alpine-gcloud-node-sbt-terraform
        docker_context_path: .
        image: wmgroot/${PROJECT_NAME}-alpine-gcloud-node-sbt-terraform
